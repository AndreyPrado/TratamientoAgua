---
title: "Graficos"
author: "Diego Vega Víquez"
format: pdf
---

```{r}
#| echo: false
#| message: false
#| warning: false

library(readxl)
library(openxlsx)
library(tidyverse)
library(viridis)
library(hms)
library(leaflet)
library(ggcorrplot)
library(skimr)
library(GGally) 
```

# Resultados
```{r}
base <- read_excel("data/base_agua_limpia.xlsx")
str(base)

# Extra: volver a poner las categóricas como factores y la fecha como Date por que
# al pasarse a excel pierde esta característica.

base$sitio <- as.factor(base$sitio)
base$cuerpo <- as.factor(base$cuerpo)
base$ubi_muestra <- as.factor(base$ubi_muestra)
base <- base %>% mutate(across(
  c(sitio, ubi_muestra, cuerpo),
  as.factor
))
table(base$sitio)
table(base$ubi_muestra)
table(base$cuerpo)
```

# Gráficos

## Distribución de la demanda biológica de oxígeno antes del tratamiento
```{r}
#| message: false
#| warning: false
#| echo: false
base %>% ggplot(aes(x=dbof))+
  geom_histogram(binwidth = 5, fill = viridis(1), color = "black", alpha= 0.8)+
  labs(title = "Distribución del DBOF (Demanda biológica de Oxígeno)",
       x = "DBO (mg/L) Antes del Tratamiento",
       y = "Frecuencia") + 
  theme_minimal()
```
## Distribución de la demanda biológica de oxígeno posterior al tratamiento
```{r}
#| message: false
#| warning: false
#| echo: false
base %>% ggplot(aes(x=dboj))+
  geom_histogram(binwidth = 5, fill = viridis(1), color = "black", alpha= 0.8)+
  labs(title = "Distribución del DBOJ (Demanda biológica de Oxígeno)",
       x = "DBO (mg/L) Posterior del Tratamiento",
       y = "Frecuencia") + 
  theme_minimal()
```
## Boxplot de la demanda biológica de oxígeno antes al tratamiento
```{r}
#| message: false
#| warning: false
#| echo: false
base %>% 
  filter(!is.na(cuerpo)) %>% filter(dbof < 50) %>% ggplot(aes(x = cuerpo, y = dbof, fill = cuerpo))+
  geom_boxplot(alpha = 0.8)+
  scale_fill_viridis_d()+
  labs(title = "DBO antes del tratamiento\n según el cuerpo de agua",
       x = "Cuerpo de agua",
       y = "DBO (mg/L)")+
  theme_minimal(base_size = 15)+
  theme(legend.position = "none")
```
## Boxplot de la demanda biológica de oxígeno posterior al tratamiento
```{r}
#| message: false
#| warning: false
#| echo: false
base %>% 
  filter(!is.na(cuerpo)) %>% filter(dboj < 50) %>% ggplot(aes(x = cuerpo, y = dboj, fill = cuerpo))+
  geom_boxplot(alpha = 0.8)+
  scale_fill_viridis_d()+
  labs(title = "DBO posterior del tratamiento\n según el cuerpo de agua",
       x = "Cuerpo de agua",
       y = "DBO (mg/L)")+
  theme_minimal(base_size = 15)+
  theme(legend.position = "none")
```
## Distribución de la demanda química de oxígeno antes del tratamiento
```{r}
#| message: false
#| warning: false
#| echo: false
base %>% ggplot(aes(x=dqof))+
  geom_histogram(binwidth = 65, fill = viridis(1), color = "black", alpha= 0.8)+
  labs(title = "Distribución del DQOF (Demanda química de Oxígeno)",
       x = "DQO (mg/L) Antes del Tratamiento",
       y = "Frecuencia") + 
  theme_minimal()
```
## Distribución de la demanda biológica de oxígeno posterior al tratamiento
```{r}
#| message: false
#| warning: false
#| echo: false

base %>% ggplot(aes(x=dqoj))+
  geom_histogram(binwidth = 150, fill = viridis(1), color = "black", alpha= 0.8)+
  labs(title = "Distribución del DQOJ (Demanda química de Oxígeno)",
       x = "DBO (mg/L) Posterior del Tratamiento",
       y = "Frecuencia") + 
  theme_minimal()
```
## Boxplot de la demanda biológica de oxígeno antes al tratamiento
```{r}
#| message: false
#| warning: false
#| echo: false
base %>% 
  filter(!is.na(cuerpo))  %>% ggplot(aes(x = cuerpo, y = dbof, fill = cuerpo))+
  geom_boxplot(alpha = 0.8)+
  scale_fill_viridis_d()+
  labs(title = "DBO antes del tratamiento\n según el cuerpo de agua",
       x = "Cuerpo de agua",
       y = "DBO (mg/L)")+
  theme_minimal(base_size = 15)+
  theme(legend.position = "none")
```
## Boxplot de la demanda biológica de oxígeno posterior al tratamiento
```{r}
#| message: false
#| warning: false
#| echo: false
base %>% 
  filter(!is.na(cuerpo)) %>% filter(dqoj < 50) %>% ggplot(aes(x = cuerpo, y = dboj, fill = cuerpo))+
  geom_boxplot(alpha = 0.8)+
  scale_fill_viridis_d()+
  labs(title = "DQO posterior del tratamiento\n según el cuerpo de agua",
       x = "Cuerpo de agua",
       y = "DQO (mg/L)")+
  theme_minimal(base_size = 15)+
  theme(legend.position = "none")
```
## Boxplot de DBO según la calidad del agua
```{r}
#| message: false
#| warning: false
#| echo: false
base %>% 
  ggplot(aes(x= oxigeno, y = dqof)) + 
  geom_point(size = 3, alpha = 0.8)+
  scale_color_viridis() + 
  labs(title = "Oxígeno disuelto vs DBO",
       x = "Oxígeno disuelto mg/L", 
       y = "DBO mg/L")+
  theme_minimal(base_size = 15)
```
```{r}
#| message: false
#| warning: false
#| echo: false
base %>% 
  ggplot(aes(x=fecharecolectaf, y = dbof, color = sitio))+
  geom_line(size = 1) + 
  geom_point(size = 2) + 
  scale_color_viridis_d() +
labs(title = "Evolución del DBO en el tiempo por sitio",
     x = "Fecha",
     y = "DBO mg/L")+
  theme_minimal(base_size = 15)
```
## Heatmap de Correlación
```{r}
#| fig-width: 10
#| fig-height: 10
#| message: false
#| warning: false
#| echo: false
val_num <- base %>% 
  select(where(is.numeric)) 
matriz <- cor(val_num, use = "pairwise.complete.obs")
ggcorrplot(matriz, method = "square", type = "lower",
           lab = FALSE, lab_size = 3,
           colors = c("#6D9EC1", "white", "#E46726"),
           title = "Mapa de Calor de Correlaciones para variables numéricas",
           ggtheme = ggplot2::theme_minimal())
```

## Matriz de Dispersión: DBO, DQO y Variables Relevantes
```{r}
#| fig-width: 20
#| fig-height: 10
#| message: false
#| warning: false
#| echo: false
base %>%
    select(dboj, dqoj, oxigeno, ph, amonio, nitratos, tempaguaj) %>%
    na.omit() %>%
    ggpairs()
```
## Matriz de correlaciones visuales y distribuciones para variables fisicoquímicas
```{r}
#| fig-width: 20
#| fig-height: 10
#| message: false
#| warning: false
#| echo: false

base %>%
  select(cuerpo, dboj, dqoj, oxigeno, ph, amonio, nitratos, tempaguaj) %>%
  na.omit() %>%
  ggpairs(aes(color = cuerpo, alpha = 0.7),
          upper = list(continuous = wrap("cor", size = 3.5)),
          lower = list(continuous = wrap("smooth", alpha = 0.4, size = 0.5)),
          diag  = list(continuous = wrap("densityDiag", alpha = 0.5))) +
  theme_minimal(base_size = 12)
```


