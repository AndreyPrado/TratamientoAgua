color = ~paleta(dqof),
fillColor = ~paleta(dqof),
fillOpacity = 0.5,
radius = 6,
stroke = FALSE,
group = ~cuerpo,
label = ~paste0("DBO: ", dqof, "mg/L"),
popup = ~paste0(
"<strong>Sitio:</strong> ", sitio, "<br/>",
"<strong>Cuerpo:</strong> ", cuerpo, "<br/>",
"<strong>DBO:</strong> ", dbof, " mg/L"
)
) %>%
addLegend("bottomright", pal = paleta, values = ~dbof,
title = "DBO (mg/L)", opacity = 1) %>%
addLayersControl(
overlayGroups = unique(datos_mapa$cuerpo),
options = layersControlOptions(collapsed = FALSE)
)
datos_mapa <- base %>%
filter(!is.na(latitud) & !is.na(longitud) & !is.na(dqof))
paleta <- colorNumeric(palette = "viridis", domain = datos_mapa$dqof, na.color ? "transparent")
leaflet(datos_mapa) %>%
addTiles() %>%
addCircleMarkers(
lng = ~longitud,
lat = ~latitud,
color = ~paleta(dbof),
fillOpacity = 0.8,
radius = 6,
stroke = FALSE,
label = ~paste0("DBO: ", dbof, " mg/L"),
popup = ~paste0(
"<strong>Sitio:</strong> ", sitio, "<br/>",
"<strong>Cuerpo:</strong> ", cuerpo, "<br/>",
"<strong>DBO:</strong> ", dbof, " mg/L"
),
group = ~cuerpo
) %>%
addLegend(
"bottomright",
pal = paleta,
values = ~dbof,
title = "DBO (mg/L)",
opacity = 1
) %>%
addLayersControl(
overlayGroups = unique(datos_mapa$cuerpo),
options = layersControlOptions(collapsed = FALSE)
)
paleta <- colorNumeric(palette = "plasma", domain = datos_mapa$dqof, na.color ? "transparent")
leaflet(datos_mapa) %>%
addTiles() %>%
addCircleMarkers(
lng = ~longitud,
lat = ~latitud,
color = ~paleta(dbof),
fillOpacity = 0.8,
radius = 6,
stroke = FALSE,
label = ~paste0("DBO: ", dbof, " mg/L"),
popup = ~paste0(
"<strong>Sitio:</strong> ", sitio, "<br/>",
"<strong>Cuerpo:</strong> ", cuerpo, "<br/>",
"<strong>DBO:</strong> ", dbof, " mg/L"
),
group = ~cuerpo
) %>%
addLegend(
"bottomright",
pal = paleta,
values = ~dbof,
title = "DBO (mg/L)",
opacity = 1
) %>%
addLayersControl(
overlayGroups = unique(datos_mapa$cuerpo),
options = layersControlOptions(collapsed = FALSE)
)
paleta <- colorNumeric(palette = "YlOrRd", domain = datos_mapa$dqof, na.color ? "transparent")
leaflet(datos_mapa) %>%
addTiles() %>%
addCircleMarkers(
lng = ~longitud,
lat = ~latitud,
color = ~paleta(dbof),
fillOpacity = 0.8,
radius = 6,
stroke = FALSE,
label = ~paste0("DBO: ", dbof, " mg/L"),
popup = ~paste0(
"<strong>Sitio:</strong> ", sitio, "<br/>",
"<strong>Cuerpo:</strong> ", cuerpo, "<br/>",
"<strong>DBO:</strong> ", dbof, " mg/L"
),
group = ~cuerpo
) %>%
addLegend(
"bottomright",
pal = paleta,
values = ~dbof,
title = "DBO (mg/L)",
opacity = 1
) %>%
addLayersControl(
overlayGroups = unique(datos_mapa$cuerpo),
options = layersControlOptions(collapsed = FALSE)
)
paleta <- colorNumeric(palette = "YlOrRd", domain = datos_mapa$dqof, na.color = "transparent")
leaflet(datos_mapa) %>%
addTiles() %>%
addCircleMarkers(
lng = ~longitud,
lat = ~latitud,
color = ~paleta(dbof),
fillOpacity = 0.8,
radius = 6,
stroke = FALSE,
label = ~paste0("DBO: ", dbof, " mg/L"),
popup = ~paste0(
"<strong>Sitio:</strong> ", sitio, "<br/>",
"<strong>Cuerpo:</strong> ", cuerpo, "<br/>",
"<strong>DBO:</strong> ", dbof, " mg/L"
),
group = ~cuerpo
) %>%
addLegend(
"bottomright",
pal = paleta,
values = ~dbof,
title = "DBO (mg/L)",
opacity = 1
) %>%
addLayersControl(
overlayGroups = unique(datos_mapa$cuerpo),
options = layersControlOptions(collapsed = FALSE)
)
paleta <- colorNumeric(palette = "plasma", domain = datos_mapa$dqof, na.color = "transparent")
leaflet(datos_mapa) %>%
addTiles() %>%
addCircleMarkers(
lng = ~longitud,
lat = ~latitud,
color = ~paleta(dbof),
fillOpacity = 0.8,
radius = 6,
stroke = FALSE,
label = ~paste0("DBO: ", dbof, " mg/L"),
popup = ~paste0(
"<strong>Sitio:</strong> ", sitio, "<br/>",
"<strong>Cuerpo:</strong> ", cuerpo, "<br/>",
"<strong>DBO:</strong> ", dbof, " mg/L"
),
group = ~cuerpo
) %>%
addLegend(
"bottomright",
pal = paleta,
values = ~dbof,
title = "DBO (mg/L)",
opacity = 1
) %>%
addLayersControl(
overlayGroups = unique(datos_mapa$cuerpo),
options = layersControlOptions(collapsed = FALSE)
)
datos_mapa$calidad <- cut(datos_mapa$dbof,
breaks = c(-Inf, 3, 6, Inf),
labels = c("Buena", "Regular", "Mala"))
# Asignar colores personalizados
pal_calidad <- colorFactor(
palette = c("forestgreen", "goldenrod", "firebrick"),
domain = datos_mapa$calidad
)
leaflet(datos_mapa) %>%
addTiles() %>%
addCircleMarkers(
lng = ~longitud,
lat = ~latitud,
color = ~paleta(dbof),
fillOpacity = 0.8,
radius = 6,
stroke = FALSE,
label = ~paste0("DBO: ", dbof, " mg/L"),
popup = ~paste0(
"<strong>Sitio:</strong> ", sitio, "<br/>",
"<strong>Cuerpo:</strong> ", cuerpo, "<br/>",
"<strong>DBO:</strong> ", dbof, " mg/L"
),
group = ~cuerpo
) %>%
addLegend(
"bottomright",
pal = paleta,
values = ~dbof,
title = "DBO (mg/L)",
opacity = 1
) %>%
addLayersControl(
overlayGroups = unique(datos_mapa$cuerpo),
options = layersControlOptions(collapsed = FALSE)
)
leaflet(datos_mapa) %>%
addTiles() %>%
addCircleMarkers(
lng = ~longitud,
lat = ~latitud,
color = ~pal_calidad(calidad),
fillColor = ~pal_calidad(calidad),
fillOpacity = 0.8,
radius = 6,
stroke = FALSE,
label = ~paste("Calidad:", calidad),
popup = ~paste0(
"<strong>Sitio:</strong> ", sitio, "<br/>",
"<strong>Cuerpo:</strong> ", cuerpo, "<br/>",
"<strong>DBO:</strong> ", dbof, " mg/L"
),
group = ~cuerpo
) %>%
addLegend("bottomright", pal = pal_calidad, values = ~calidad,
title = "Calidad del agua", opacity = 1) %>%
addLayersControl(
overlayGroups = unique(datos_mapa$cuerpo),
options = layersControlOptions(collapsed = FALSE)
)
datos_mapa <- datos_mapa %>%
mutate(
valor = .data[[variable_mapa]],
rango_auto = cut(
valor,
breaks = pretty(range(valor, na.rm = TRUE), n = 10),
include.lowest = TRUE,
dig.lab = 10  # muestra bien los decimales si es necesario
)
)
# Paleta de colores generada automáticamente
paleta <- colorFactor(
palette = "YlOrRd",
domain = datos_mapa$rango_auto
)
# Mapa con leaflet
leaflet(datos_mapa) %>%
addTiles() %>%
addCircleMarkers(
lng = ~longitud,
lat = ~latitud,
color = ~paleta(rango_auto),
fillColor = ~paleta(rango_auto),
fillOpacity = 0.85,
radius = 6,
stroke = FALSE,
label = ~paste("Sitio:", sitio,
"<br>Cuerpo:", cuerpo,
paste0("<br>", toupper(variable_mapa), ": ", valor, " mg/L")),
popup = ~paste0("<strong>Ubicación:</strong> ", sitio,
"<br><strong>Cuerpo:</strong> ", cuerpo,
"<br><strong>", toupper(variable_mapa), ":</strong> ", valor, " mg/L")
) %>%
addLegend(
"bottomright",
pal = paleta,
values = ~rango_auto,
title = paste("Rangos de", toupper(variable_mapa)),
opacity = 1
)
variable_mapa <- "dqof"
datos_mapa <- datos_mapa %>%
mutate(
valor = .data[[variable_mapa]],
rango_auto = cut(
valor,
breaks = pretty(range(valor, na.rm = TRUE), n = 10),
include.lowest = TRUE,
dig.lab = 10  # muestra bien los decimales si es necesario
)
)
variable_mapa <- "dqof"
datos_mapa <- datos_mapa %>%
mutate(
valor = .data[[variable_mapa]],
rango_auto = cut(
valor,
breaks = pretty(range(valor, na.rm = TRUE), n = 10),
include.lowest = TRUE,
dig.lab = 10  # muestra bien los decimales si es necesario
)
)
# Paleta de colores generada automáticamente
paleta <- colorFactor(
palette = "YlOrRd",
domain = datos_mapa$rango_auto
)
# Mapa con leaflet
leaflet(datos_mapa) %>%
addTiles() %>%
addCircleMarkers(
lng = ~longitud,
lat = ~latitud,
color = ~paleta(rango_auto),
fillColor = ~paleta(rango_auto),
fillOpacity = 0.85,
radius = 6,
stroke = FALSE,
label = ~paste("Sitio:", sitio,
"<br>Cuerpo:", cuerpo,
paste0("<br>", toupper(variable_mapa), ": ", valor, " mg/L")),
popup = ~paste0("<strong>Ubicación:</strong> ", sitio,
"<br><strong>Cuerpo:</strong> ", cuerpo,
"<br><strong>", toupper(variable_mapa), ":</strong> ", valor, " mg/L")
) %>%
addLegend(
"bottomright",
pal = paleta,
values = ~rango_auto,
title = paste("Rangos de", toupper(variable_mapa)),
opacity = 1
)
# Mapa con leaflet
leaflet(datos_mapa) %>%
addTiles() %>%
addCircleMarkers(
lng = ~longitud,
lat = ~latitud,
color = ~paleta(rango_auto),
fillColor = ~paleta(rango_auto),
fillOpacity = 0.85,
radius = 6,
stroke = FALSE,
label = ~paste("Sitio:", sitio,
"Cuerpo:", cuerpo,
paste0("<br>", toupper(variable_mapa), ": ", valor, " mg/L")),
popup = ~paste0("<strong>Ubicación:</strong> ", sitio,
"<br><strong>Cuerpo:</strong> ", cuerpo,
"<br><strong>", toupper(variable_mapa), ":</strong> ", valor, " mg/L")
) %>%
addLegend(
"bottomright",
pal = paleta,
values = ~rango_auto,
title = paste("Rangos de", toupper(variable_mapa)),
opacity = 1
)
# Mapa con leaflet
leaflet(datos_mapa) %>%
addTiles() %>%
addCircleMarkers(
lng = ~longitud,
lat = ~latitud,
color = ~paleta(rango_auto),
fillColor = ~paleta(rango_auto),
fillOpacity = 0.85,
radius = 6,
stroke = FALSE,
label = ~paste("Sitio:", sitio,
"Cuerpo:", cuerpo,
paste0(" ", toupper(variable_mapa), ": ", valor, " mg/L")),
popup = ~paste0("<strong>Ubicación:</strong> ", sitio,
"<strong>Cuerpo:</strong> ", cuerpo,
"<strong>", toupper(variable_mapa), ":</strong> ", valor, " mg/L")
) %>%
addLegend(
"bottomright",
pal = paleta,
values = ~rango_auto,
title = paste("Rangos de", toupper(variable_mapa)),
opacity = 1
)
graf_8 <- base %>%
filter(!is.na(cuerpo)) %>% filter(dqoj < 50) %>% ggplot(aes(x = cuerpo, y = dboj, fill = cuerpo))+
geom_boxplot(alpha = 0.8)+
scale_fill_viridis_d()+
labs(title = "DBO posterior del tratamiento\n según el cuerpo de agua",
x = "Cuerpo de agua",
y = "DQO (mg/L)")+
theme_minimal(base_size = 15)+
theme(legend.position = "none")
print(graf_8)
graf_8 <- base %>%
filter(!is.na(cuerpo)) %>% filter(dqoj < 50) %>% ggplot(aes(x = cuerpo, y = dboj, fill = cuerpo))+
geom_boxplot(alpha = 0.8)+
scale_fill_viridis_d()+
labs(title = "DQO posterior del tratamiento\n según el cuerpo de agua",
x = "Cuerpo de agua",
y = "DQO (mg/L)")+
theme_minimal(base_size = 15)+
theme(legend.position = "none")
print(graf_8)
graf_9 <- base %>%
ggplot(aes(x= oxigeno, y = dbof)) +
geom_point(size = 3, alpha = 0.8)+
scale_color_viridis_d() +
labs(title = "Oxígeno disuelto vs DBO",
x = "Oxígeno disuelto mg/L",
y = "DBO mg/L")+
theme_minimal(base_size = 15)
print(graf_9)
graf_9 <- base %>%
ggplot(aes(x= oxigeno, y = dqof)) +
geom_point(size = 3, alpha = 0.8)+
scale_color_viridis_d() +
labs(title = "Oxígeno disuelto vs DBO",
x = "Oxígeno disuelto mg/L",
y = "DBO mg/L")+
theme_minimal(base_size = 15)
graf_9 <- base %>%
ggplot(aes(x= oxigeno, y = dqof)) +
geom_point(size = 3, alpha = 0.8)+
scale_color_viridis_d() +
labs(title = "Oxígeno disuelto vs DBO",
x = "Oxígeno disuelto mg/L",
y = "DBO mg/L")+
theme_minimal(base_size = 15)
print(graf_9)
graf_9 <- base %>%
ggplot(aes(x= oxigeno, y = dqoj)) +
geom_point(size = 3, alpha = 0.8)+
scale_color_viridis_d() +
labs(title = "Oxígeno disuelto vs DBO",
x = "Oxígeno disuelto mg/L",
y = "DBO mg/L")+
theme_minimal(base_size = 15)
print(graf_9)
ggplot(aes(x= oxigeno, y = dqof) +
scale_color_viridis_d() +
graf_9 <- base %>%
ggplot(aes(x= oxigeno, y = dqof)) +
geom_point(size = 3, alpha = 0.8)+
scale_color_viridis_d() +
labs(title = "Oxígeno disuelto vs DBO",
x = "Oxígeno disuelto mg/L",
y = "DBO mg/L")+
theme_minimal(base_size = 15)
print(graf_9)
graf_9 <- base %>%
ggplot(aes(x= oxigeno, y = dqof)) +
geom_point(size = 3, alpha = 0.8)+
scale_color_viridis_d() +
labs(title = "Oxígeno disuelto vs DBO",
x = "Oxígeno disuelto mg/L",
y = "DBO mg/L")+
theme_minimal(base_size = 15)
print(graf_9)
graf_9 <- base %>%
ggplot(aes(x= oxigeno, y = dqof)) +
geom_point(size = 3, alpha = 0.8)+
scale_color_viridis() +
labs(title = "Oxígeno disuelto vs DBO",
x = "Oxígeno disuelto mg/L",
y = "DBO mg/L")+
theme_minimal(base_size = 15)
print(graf_9)
labs(title = "Evolución del DBO en el tiempo por sitio",
x = "Fecha",
y = "DBO mg/L")+
theme_minimal(base_size = 15)
grafico_10 <- base %>%
ggplot(aes(x=fecha, y = dbof, color = sitio))+
geom_line(size = 1) +
geom_point(size = 2) +
scale_color_viridis() +
labs(title = "Evolución del DBO en el tiempo por sitio",
x = "Fecha",
y = "DBO mg/L")+
theme_minimal(base_size = 15)
print(graf_10)
graf_10 <- base %>%
ggplot(aes(x=fecha, y = dbof, color = sitio))+
geom_line(size = 1) +
geom_point(size = 2) +
scale_color_viridis() +
labs(title = "Evolución del DBO en el tiempo por sitio",
x = "Fecha",
y = "DBO mg/L")+
theme_minimal(base_size = 15)
print(graf_10)
graf_10 <- base %>%
ggplot(aes(x=fecha, y = dbof, color = sitio))+
geom_line(size = 1) +
geom_point(size = 2) +
scale_color_viridis() +
labs(title = "Evolución del DBO en el tiempo por sitio",
x = "Fecha",
y = "DBO mg/L")+
theme_minimal(base_size = 15)
print(graf_10)
graf_10 <- base %>%
ggplot(aes(x=fecha, y = dbof, color = sitio))+
geom_line(size = 1) +
geom_point(size = 2) +
scale_color_viridis_d() +
labs(title = "Evolución del DBO en el tiempo por sitio",
x = "Fecha",
y = "DBO mg/L")+
theme_minimal(base_size = 15)
print(graf_10)
library(ggcorrplot)
install.packages("ggcorrplot")
library(ggcorrplot)
val_num <- base %>%
select(where(is.numeric))
matriz <- cor(val_num, use = "pairwise.complete.obs")
ggcorrplot(matriz, method = "square", type = "lower",
lab = TRUE, lab_size = 3,
colors = c("#6D9EC1", "white", "#E46726"),
title = "Mapa de Calor de Correlaciones para variables numéricas",
ggtheme = ggplot2::theme_minimal())
ggcorrplot(matriz, method = "square", type = "lower",
lab = FALSE, lab_size = 3,
colors = c("#6D9EC1", "white", "#E46726"),
title = "Mapa de Calor de Correlaciones para variables numéricas",
ggtheme = ggplot2::theme_minimal())
